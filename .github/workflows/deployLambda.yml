name: AWS Lambda CICD
on:
  push:
    branches: [main]
env:
  tableName: 'weather'
  lambdaFunctionName: 'weather-lambda'
  jarFileName: 'weatherapi-0.0.1-SNAPSHOT.jar'
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        id: checkout
        uses: actions/checkout@v3
      - name: Setup Java
        id: java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build Project
        id: build
        run: mvn clean install
      - name: Configure AWS Credentials
        id: awsConfig
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Verify AWS DynamoDB
        id: verifyDb
        run: aws dynamodb describe-table --table-name ${{env.tableName}}
        continue-on-error: true
      - name: Create AWS DynamoDB
        id: createDb
        if: steps.verifyDb.outcome == 'failure'
        run: aws dynamodb create-table --table-name ${{env.tableName}} --attribute-definitions AttributeName=city,AttributeType=S --key-schema AttributeName=city,KeyType=HASH --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1
      - name: Update Lambda Function
        id: updateLambda
        run: aws lambda update-function-code --function-name ${{env.lambdaFunctionName}} --zip-file fileb://target/${{env.jarFileName}}
        continue-on-error: true
      - name: Create AWS Lambda Function
        id: createLambda
        if: steps.updateLambda.outcome == 'failure'
        run: |
          aws lambda create-function --function-name ${{env.lambdaFunctionName}} --runtime java17 --handler org.arghya.weatherapi.StreamLambdaHandler::handleRequest --role arn:aws:iam::574373443538:role/lambda-role-new --zip-file fileb://target/${{env.jarFileName}}
        continue-on-error: true